<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_empty</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-4</depth>
  <persistent>0</persistent>
  <parentName>obj_blockparent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///A frozen enemy
exception = 1;
//Whether this block can be hit
ready = 0
//How vulnerable is this enemy to various items?
hardness = 2

//How vulnerable is this enemy to Mario?
stomp = -1

//Is this enemy heavy?
isheavy = 0

//A collision object for Mario to ride
mytop = instance_create(x,y,obj_slippery)

//Create a solid
mysolid = instance_create(x,y,obj_solid);

//Alpha blink before shattering
alarm[2] = 400

//Shatter and destroy after a while
alarm[4] = 500
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Destroy the solid
instance_activate_object(mysolid)
with mysolid instance_destroy()

instance_activate_object(mytop)
with mytop instance_destroy()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Shatter and destroy
if not outside_view()
    event_user(0)
instance_destroy()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Alpha blink
image_alpha = 1
alarm[2] = 4
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Alpha blink
image_alpha = 0.4
alarm[3] = 4
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Check if Mario can pick up this brick
if keyboard_check_pressed(vk_control)
and collision_rectangle(bbox_left-2,bbox_top-1,bbox_right+2,bbox_bottom-2,obj_mario,0,0)
and scr_canhold()
and sprite_index == spr_frozenenemy
{

    //Create the appropriate brick, and force it to be held
    with instance_create(obj_mario.x,obj_mario.y+16,obj_frozenenemy_pickup)
    {
        alarm[0] = other.alarm[4];
        alarm[1] = other.alarm[2];
        event_user(15)
    }

    //Destroy
    instance_destroy()

}

event_inherited();

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="25">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Prepare sprite

//Select an appropriate ice sprite
if bbox_bottom-bbox_top &gt; 18
and bbox_right-bbox_left &gt; 18
    sprite_index = spr_frozenenemy_big
else if bbox_bottom-bbox_top &gt; 18
    sprite_index = spr_frozenenemy_tall
else if bbox_right-bbox_left &gt; 18
    sprite_index = spr_frozenenemy_wide
else
    sprite_index = spr_frozenenemy

//Stretch the solid top appropriately
if sprite_index = spr_frozenenemy_wide
or sprite_index = spr_frozenenemy_big
{
    mytop.image_xscale = 2
    mysolid.image_xscale = 2    
};

//Prevent the solid from messing with floor collisions
if sprite_index = spr_frozenenemy_tall
or sprite_index = spr_frozenenemy_big
    mysolid.image_yscale = 2
    
//Prevent frozen enemies from spawning inside solids
if not collision_rectangle(bbox_right,bbox_top,bbox_right,bbox_bottom,obj_solid,1,0)
    while collision_rectangle(bbox_left,bbox_top,bbox_left,bbox_bottom,obj_solid,1,0)
        x++
else if not collision_rectangle(bbox_left,bbox_top,bbox_left,bbox_bottom,obj_solid,1,0)
    while collision_rectangle(bbox_right,bbox_top,bbox_right,bbox_bottom,obj_solid,1,0)
        x--
else if not collision_rectangle(bbox_left,bbox_bottom,bbox_right,bbox_bottom,obj_solid,1,0)
    while collision_rectangle(bbox_left,bbox_top,bbox_right,bbox_top,obj_solid,1,0)
        y++
else if not collision_rectangle(bbox_left,bbox_top,bbox_right,bbox_top,obj_solid,1,0)
    while collision_rectangle(bbox_left,bbox_bottom,bbox_right,bbox_bottom,obj_solid,1,0)
        y--
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Shatter

//Play sounds
audio_play_sound(snd_bump,0,0)
audio_play_sound(snd_shatter,0,0)

//Make shards
with instance_create(x,y,obj_shard)
{
    sprite_index = spr_shard_th
    direction = 45
}
with instance_create(x,y,obj_shard)
{
    sprite_index = spr_shard_th
    direction = 60
}
with instance_create(x,y,obj_shard)
{
    sprite_index = spr_shard_th
    direction = 120
}
with instance_create(x,y,obj_shard)
{
    sprite_index = spr_shard_th
    direction = 135
}
//Destroy
instance_destroy()
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
