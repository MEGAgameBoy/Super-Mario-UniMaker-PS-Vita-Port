<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>-999</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0;
image_index = 0;
image_alpha = 0;

connected = 0;
color = c_gray;
vb = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>gamepad_set_vibration(0,0,0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Posição - Dentro da area ativada
x = view_xview[0]-32;
y = view_yview[0]-32;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///CONTROLES EXTERNOS

//Gamepad (XBOX)
if(gamepad_is_connected(0)){

    //Sinalizar
    if(connected == 0){
    
        image_alpha = 2;
        connected = 1;
    };
    else{
    
        if(image_alpha &gt; 0)
            image_alpha -= 0.05;
    };
    
    if(global.gamepadbi != 0){
    
        //Up button
        if(gamepad_button_check_pressed(0,gp_padu))
            keyboard_key_press(global.key_up);
        else if(gamepad_button_check_released(0,gp_padu))
            keyboard_key_release(global.key_up);
            
        //Down button
        if(gamepad_button_check_pressed(0,gp_padd))
            keyboard_key_press(global.key_down);
        else if(gamepad_button_check_released(0,gp_padd))
            keyboard_key_release(global.key_down);
    
        //Left button
        if(gamepad_button_check_pressed(0,gp_padl))
            keyboard_key_press(global.key_left);
        else if(gamepad_button_check_released(0,gp_padl))
            keyboard_key_release(global.key_left);
        
        //Right button
        if(gamepad_button_check_pressed(0,gp_padr))
            keyboard_key_press(global.key_right);
        else if(gamepad_button_check_released(0,gp_padr))
            keyboard_key_release(global.key_right);
    
        //A e B button - Jump
        if(gamepad_button_check_pressed(0,gp_face2))
            keyboard_key_press(global.key_jump);
        else if(gamepad_button_check_released(0,gp_face2))
            keyboard_key_release(global.key_jump);
            
        if(gamepad_button_check_pressed(0,gp_face3))
            keyboard_key_press(global.key_jump);
        else if(gamepad_button_check_released(0,gp_face3))
            keyboard_key_release(global.key_jump);
            
        //X e Y button - Run
        if(gamepad_button_check_pressed(0,gp_face1))
            keyboard_key_press(global.key_run);
        else if(gamepad_button_check_released(0,gp_face1))
            keyboard_key_release(global.key_run);
            
        if(gamepad_button_check_pressed(0,gp_face4))
            keyboard_key_press(global.key_run);
        else if(gamepad_button_check_released(0,gp_face4))
            keyboard_key_release(global.key_run);
    
        //Spin button
        if(gamepad_button_check_pressed(0,gp_shoulderl))
            keyboard_key_press(global.key_spin);
        else if(gamepad_button_check_released(0,gp_shoulderl))
            keyboard_key_release(global.key_spin);
            
        if(gamepad_button_check_pressed(0,gp_shoulderlb))
            keyboard_key_press(global.key_spin);
        else if(gamepad_button_check_released(0,gp_shoulderlb))
            keyboard_key_release(global.key_spin);
        
        if(gamepad_button_check_pressed(0,gp_shoulderrb))
            keyboard_key_press(global.key_spin);
        else if(gamepad_button_check_released(0,gp_shoulderrb))
            keyboard_key_release(global.key_spin);
            
        //Reserver Item
        if(gamepad_button_check_pressed(0,gp_shoulderr))
            keyboard_key_press(global.key_reserve);
        else if(gamepad_button_check_released(0,gp_shoulderr))
            keyboard_key_release(global.key_reserve);
                
        //Start button - Pause
        if(gamepad_button_check_pressed(0,gp_start))
            keyboard_key_press(global.key_pause);
        else if(gamepad_button_check_released(0,gp_start))
            keyboard_key_release(global.key_pause);
    
        //Screenshot - Select
        if(gamepad_button_check_pressed(0,gp_select))
            keyboard_key_press(global.key_screenshot);
        else if(gamepad_button_check_released(0,gp_select))
            keyboard_key_release(global.key_screenshot);
        
        var anl_lh, anl_lv, anl_rh, anl_rv;            
        anl_lh = gamepad_axis_value(0, gp_axislh);
        anl_lv = gamepad_axis_value(0, gp_axislv);
        anl_rh = gamepad_axis_value(0, gp_axisrh);
        anl_rv = gamepad_axis_value(0, gp_axisrv);
        
        //Mouse - Normal
        if(anl_lh != 0)
        ||(anl_lv != 0)
            display_mouse_set(mouse_x+(anl_lh/2),mouse_y+(anl_lv/2));

        //Mouse - Rápido
        if(anl_rh != 0)
        ||(anl_rv != 0)
            display_mouse_set(mouse_x+anl_rh,mouse_y+anl_rv);

    };
};
else
    connected = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Cor
/*switch (global.uni_layout_color){
 case (0): color = c_gray; break;
 case (1): color = c_dkgray; break;
 case (2): color = c_red; break;
 case (3): color = c_maroon; break;
 case (4): color = c_lime; break;
 case (5): color = c_green; break;
 case (6): color = c_aqua; break;
 case (7): color = c_blue; break; 
 case (8): color = c_navy; break;
 case (9): color = c_yellow; break;
 case (10): color = c_olive; break;
 case (11): color = c_fuchsia; break;
 case (12): color = c_purple; break;
 case (13): color = c_orange; break;
 case (14): color = c_teal; break;
 case (15): color = c_ltgray; break;
}
gamepad_set_colour(0,color);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Rumble
if(global.gamepadbi != 0)
&amp;&amp;(gamepad_is_connected(0))
&amp;&amp;(global.gamepadvibration != 0){

    gamepad_set_vibration(0,vb,vb);
    vb = 0;
    alarm[0] = 15;
};
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
