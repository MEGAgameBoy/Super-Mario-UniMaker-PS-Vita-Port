<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_effect</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>400</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0;
image_index = 0;
gfx = 0;
event_user(0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(frame &lt; global.custom_effect_frames[gfx]-1)
    frame++;
else
    frame = 0;
    
alarm[1] = global.custom_effect_anim[gfx];
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>sprite_index = global.custom_effect_sprite[gfx];

if(global.custom_effect_frames[gfx] &gt; 1)
    alarm[1] = global.custom_effect_anim[gfx];
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Horizontal
if(global.uni_level_effect == 0)
    exit;
if(global.custom_effect_camfixed[gfx] &lt; 2){

if(global.custom_effect_parallax_h[gfx] == 1)
&amp;&amp;(room_width &gt; 432){

    if(global.custom_effect_range_h[gfx] == 0){
    
        if(depth == 400+gfx)
            xx = (global.custom_effect_offset_h[gfx]+hspd)+(round(view_xview[0])*((gfx+1)/9));
        else
            xx = (global.custom_effect_offset_h[gfx]+hspd)+(round(view_xview[0])*((gfx+1)-6));
    };
    else
        xx = (global.custom_effect_offset_h[gfx]+hspd)+(round(view_xview[0])/global.custom_effect_range_h[gfx]);
}
else
    xx = global.custom_effect_offset_h[gfx]+hspd;
        
//Vertical
if(global.custom_effect_parallax_v[gfx] == 1){

    if(global.custom_effect_range_v[gfx] == 0){
    
        if(depth == 400+gfx)
            yy = (global.custom_effect_offset_h[gfx]+hspd)+(round(view_xview[0])*((gfx+1)/9));
        else
            yy = (global.custom_effect_offset_v[gfx]+vspd)+(round(view_yview[0])*((gfx+1)-6)); 
    };
    else
        yy = (global.custom_effect_offset_v[gfx]+vspd)+(round(view_yview[0])/global.custom_effect_range_v[gfx]);        
}
else
    yy = global.custom_effect_offset_v[gfx]+vspd;
}
else{

    var follow = noone;
    if(instance_exists(obj_mario))
        follow = obj_mario;
    else if(instance_exists(obj_goalmario))
        follow = obj_goalmario;
    else if(instance_exists(obj_deadmario))
        follow = obj_deadmario;    
    else if(instance_exists(obj_uni_startsing))
        follow = obj_uni_startsing;
    else if(instance_exists(obj_uni_mario)){
        
        if(global.uni_play == 0)
            follow = obj_uni_startsing;
        else
            follow = noone;
    };
           
    if(follow != noone){

        xx = global.custom_effect_offset_h[gfx]+follow.x;
        yy = global.custom_effect_offset_v[gfx]+follow.y;    
    };
    else{
    
        xx = global.custom_effect_offset_h[gfx]+mouse_x;
        yy = global.custom_effect_offset_v[gfx]+mouse_y;
    };
};
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(global.uni_level_effect == 0)
    exit;
if((global.uni_play == 1)||(instance_exists(obj_uni_layout_screen_temp))){
    
    hspd += global.custom_effect_scroll_h[gfx]
    vspd += global.custom_effect_scroll_v[gfx]
};
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>xx = 0;
yy = 0;
vspd = 0;
hspd = 0;
frame = 0;

if(global.custom_effect_depth[gfx] == 0)
    depth = 400+gfx;
else
    depth = -11-gfx;

alarm[0] = 2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(global.uni_level_effect == 1){
if(!instance_exists(obj_uni_layout_screen_temp)){
if!(sprite_exists(sprite_index))
||((global.uni_play == 0)&amp;&amp;(depth &lt; 100))
    exit;
};
};
else{
    exit;
};

if(global.custom_effect_bmode[gfx] == 1) 
    draw_set_blend_mode(bm_add);
else if(global.custom_effect_bmode[gfx] == 2) 
    draw_set_blend_mode(bm_subtract);
else if(global.custom_effect_bmode[gfx] == 3) 
    draw_set_blend_mode(bm_max);
else
    draw_set_blend_mode(bm_normal);

draw_set_alpha(global.custom_effect_opacity[gfx]);

if(global.custom_effect_camfixed[gfx] == 1){

    //Tiled horizontal
    if((global.custom_effect_tiled_h[gfx] == true) &amp;&amp; (global.custom_effect_tiled_v[gfx] == false))
        draw_sprite_tiled_horizontal(sprite_index,frame,xx,view_yview[0]+yy);
    //Tiled vertical
    else if((global.custom_effect_tiled_h[gfx] == false) &amp;&amp; (global.custom_effect_tiled_v[gfx] == true))
        draw_sprite_tiled_vertical(sprite_index,frame,view_xview[0]+xx,yy);
    //Tiled horizontal e vertical
    else if((global.custom_effect_tiled_h[gfx] == true) &amp;&amp; (global.custom_effect_tiled_v[gfx] == true))
        draw_sprite_tiled(sprite_index,frame,view_xview[0]+xx,view_yview[0]+yy);    
    else
    //Não tiled
    draw_sprite(sprite_index,frame,view_xview[0]+xx,view_yview[0]+yy);
};
else{

    //Tiled horizontal
    if((global.custom_effect_tiled_h[gfx] == true) &amp;&amp; (global.custom_effect_tiled_v[gfx] == false))
        draw_sprite_tiled_horizontal(sprite_index,frame,xx,yy);
    //Tiled vertical
    else if((global.custom_effect_tiled_h[gfx] == false) &amp;&amp; (global.custom_effect_tiled_v[gfx] == true))
        draw_sprite_tiled_vertical(sprite_index,frame,xx,yy);
    //Tiled horizontal e vertical
    else if((global.custom_effect_tiled_h[gfx] == true) &amp;&amp; (global.custom_effect_tiled_v[gfx] == true))
        draw_sprite_tiled(sprite_index,frame,xx,yy);    
    else
    //Não tiled
    draw_sprite(sprite_index,frame,xx,yy);
};

draw_set_alpha(1);
draw_set_blend_mode(bm_normal);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
