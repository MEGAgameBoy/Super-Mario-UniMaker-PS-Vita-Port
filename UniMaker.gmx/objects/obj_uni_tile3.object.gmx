<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_uni_demo_1</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>9</depth>
  <persistent>0</persistent>
  <parentName>obj_uni_tile_control</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Recursos do UniMaker
event_inherited();
//LOCAL
move_snap(16,16);
//Ajustar todos os tiles em volta deste
instance_create(x,y,obj_uni_tile_trigger);
create_bgo = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///BGO
//SE estiver em baixo
if(collision_point(x,y-8,obj_uni_tile,0,1))
||(collision_point(x,y-8,obj_uni_demo2_bgo1,0,1))
||(collision_point(x,y-8,obj_uni_demo2_bgo2,0,1))
||(collision_point(x,y-8,obj_uni_demo2_bgo3,0,1))
||(collision_point(x,y-8,obj_uni_demo2_bgo4,0,1))
||(collision_point(x-8,y-8,obj_uni_demo2_bgo4,0,1))
||(collision_point(x+24,y-8,obj_uni_demo2_bgo4,0,1)){

     alarm[2] = -1;
     exit;
}
//se estiver em cima
else{

    if(create_bgo == round(random(100)))
    ||(create_bgo == round(random(100)))
    ||(create_bgo == round(random(100)))
    ||(create_bgo == round(random(100)))
    ||(create_bgo == round(random(100)))
    ||(create_bgo == round(random(100)))
    ||(create_bgo == round(random(100)))
    ||(create_bgo == round(random(100)))
    ||(create_bgo == round(random(100))){
    
    //SE estiver ao lado de outro tile
    if(collision_point(x-8,y+8,obj_uni_tile,0,1))
    &amp;&amp;(collision_point(x+24,y+8,obj_uni_tile,0,1))
    &amp;&amp;(!collision_point(x-8,y-8,obj_uni_demo2_bgo1,0,1))
    &amp;&amp;(!collision_point(x+24,y-8,obj_uni_demo2_bgo1,0,1))
    &amp;&amp;(!collision_point(x-8,y-8,obj_uni_demo2_bgo2,0,1))
    &amp;&amp;(!collision_point(x+24,y-8,obj_uni_demo2_bgo2,0,1))
    &amp;&amp;(!collision_point(x-8,y-8,obj_uni_demo2_bgo3,0,1))
    &amp;&amp;(!collision_point(x+24,y-8,obj_uni_demo2_bgo3,0,1)){

        create_bgo2 = choose(0,0,1,0,1,0,0,1,0,1,0,0,1,0,0)
        if(create_bgo2 == 0)
            instance_create(x+16,y,obj_uni_demo2_bgo4);
        else
            instance_create(x,y,choose(obj_uni_demo2_bgo1,obj_uni_demo2_bgo2,obj_uni_demo2_bgo3,obj_uni_demo2_bgo2,obj_uni_demo2_bgo1,obj_uni_demo2_bgo3));    
    
    }
    else{
     
        instance_create(x,y,choose(obj_uni_demo2_bgo1,obj_uni_demo2_bgo2,obj_uni_demo2_bgo3,obj_uni_demo2_bgo2,obj_uni_demo2_bgo1,obj_uni_demo2_bgo3));    
    };
    };
}

///BGO
//SE estiver em baixo
/*if(place_meeting(x,y-16,obj_uni_tile))
||(place_meeting(x,y-16,obj_uni_demo2_bgo1))
||(place_meeting(x,y-16,obj_uni_demo2_bgo2))
||(place_meeting(x,y-16,obj_uni_demo2_bgo3))
||(place_meeting(x,y-16,obj_uni_demo2_bgo4))
||(place_meeting(x-16,y-16,obj_uni_demo2_bgo4))
||(place_meeting(x+16,y-16,obj_uni_demo2_bgo4)){

     alarm[2] = -1;
     exit;
}
//se estiver em cima
else{

    if(create_bgo == round(random(100)))
    ||(create_bgo == round(random(100)))
    ||(create_bgo == round(random(100)))
    ||(create_bgo == round(random(100)))
    ||(create_bgo == round(random(100)))
    ||(create_bgo == round(random(100)))
    ||(create_bgo == round(random(100)))
    ||(create_bgo == round(random(100)))
    ||(create_bgo == round(random(100))){
    
    //SE estiver ao lado de outro tile
    if(place_meeting(x-16,y,obj_uni_tile))
    &amp;&amp;(place_meeting(x+16,y,obj_uni_tile))
    &amp;&amp;(!place_meeting(x-16,y-16,obj_uni_demo2_bgo1))
    &amp;&amp;(!place_meeting(x+16,y-16,obj_uni_demo2_bgo1))
    &amp;&amp;(!place_meeting(x-16,y-16,obj_uni_demo2_bgo2))
    &amp;&amp;(!place_meeting(x+16,y-16,obj_uni_demo2_bgo2))
    &amp;&amp;(!place_meeting(x-16,y-16,obj_uni_demo2_bgo3))
    &amp;&amp;(!place_meeting(x+16,y-16,obj_uni_demo2_bgo3)){

        create_bgo2 = choose(0,0,1,0,1,0,0,1,0,1,0,0,1,0,0)
        if(create_bgo2 == 0)
            instance_create(x+16,y-16,obj_uni_demo2_bgo4);
        else
            instance_create(x,y-16,choose(obj_uni_demo2_bgo1,obj_uni_demo2_bgo2,obj_uni_demo2_bgo3,obj_uni_demo2_bgo2,obj_uni_demo2_bgo1,obj_uni_demo2_bgo3));    
    
    }
    else{
     
        instance_create(x,y-16,choose(obj_uni_demo2_bgo1,obj_uni_demo2_bgo2,obj_uni_demo2_bgo3,obj_uni_demo2_bgo2,obj_uni_demo2_bgo1,obj_uni_demo2_bgo3));    
    };
    };
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Não fazer nada
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_uni_tile_trigger">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Ajustar tile
event_user(6);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Não fazer nada
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Apagar
if (global.uni_resource_create == false)
&amp;&amp; (global.uni_editor_activity == true){
    if (global.uni_cursor == 2){
        //Ajustar todos os tiles em volta deste
        instance_create(x,y,obj_uni_tile_trigger);
        event_user(2);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Apagar (Borracha Rápida)
if (global.uni_cursor == 2)
&amp;&amp; (global.uni_editor_activity == true){
    event_user(2);
    //Ajustar todos os tiles em volta deste
    instance_create(x,y,obj_uni_tile_trigger);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="18">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Tile novo - BGO Automatico
create_bgo = round(random(100));
alarm[5] = 5;

var itp;
if(instance_place(x,y,obj_uni_demo2_bgo1)) itp = instance_place(x,y,obj_uni_demo2_bgo1)
else if(instance_place(x,y,obj_uni_demo2_bgo2)) itp = instance_place(x,y,obj_uni_demo2_bgo2)
else if(instance_place(x,y,obj_uni_demo2_bgo3)) itp = instance_place(x,y,obj_uni_demo2_bgo3)
else if(instance_place(x,y,obj_uni_demo2_bgo4)) itp = instance_place(x,y,obj_uni_demo2_bgo4)
else itp = 0;
if(itp != 0) with(itp) instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="16">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Sprite do tile
switch (global.uni_level_style)
{
 case (0): sprite_index = spr_uni_tile_1; break;
 case (1): sprite_index = spr_uni_tile_2; break;
 case (2): sprite_index = spr_uni_tile_3; break;
 case (3): sprite_index = spr_uni_tile_4; break;
 case (4): sprite_index = spr_uni_tile_5; break;
 case (5): sprite_index = spr_uni_tile_6; break;
 case (6): sprite_index = spr_uni_tile_7; break;
 case (7): sprite_index = spr_uni_tile_8; break;
 case (8): sprite_index = spr_uni_tile_9; break;
 case (9): sprite_index = spr_uni_tile_10; break;
 case (10): sprite_index = spr_uni_tile_11; break;
 case (11): sprite_index = spr_uni_tile_12; break;
 case (12): sprite_index = spr_uni_tile_13; break;
 case (13): sprite_index = spr_uni_tile_14; break;
 case (14): sprite_index = spr_uni_tile_15; break;
 case (15): sprite_index = spr_uni_tile_16; break;
 case (16): sprite_index = spr_uni_tile_17; break;
 case (17): sprite_index = spr_uni_tile_18; break;
 case (18): sprite_index = spr_uni_tile_19; break;
 case (19): sprite_index = global.customtheme_assets[? "TILE"]; break;
 case (20): sprite_index = spr_uni_tile_extra_1; break;
 case (21): sprite_index = spr_uni_tile_extra_2; break;
 case (22): sprite_index = spr_uni_tile_extra_3; break;
 case (23): sprite_index = spr_uni_tile_extra_4; break;
}
event_user(5);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="15">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Atualizar tile
move_snap(16,16);
var tile,i;
image_speed = 0;
scr_uni_autotile();
for (i = 0; i &lt; 47; i +=1)
{
 if (imagesingle = i)
 {
  image_index = i;
 }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var vobj;
if(image_index == 28)
||(image_index == 29)
||(image_index == 30)
||(image_index == 31)
||(image_index == 32)
||(image_index == 33)
||(image_index == 34)
||(image_index == 35)
||(image_index == 36)
||(image_index == 37)
||(image_index == 38)
||(image_index == 39)
||(image_index == 40)
||(image_index == 41)
||(image_index == 42)
||(image_index == 43)
||(image_index == 47)
||(image_index == 48)
    vobj = obj_modelbgo 
else
    vobj = obj_modelsolid;

with(instance_create(x,y,vobj)){

    image_speed = 0; 
    sprite_index = other.sprite_index; 
    image_index = other.image_index; 
    depth = other.depth;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Deletar BGOS acima
var itp;
if(instance_place(x,y-16,obj_uni_demo2_bgo1)) itp = instance_place(x,y-16,obj_uni_demo2_bgo1)
else if(instance_place(x,y-16,obj_uni_demo2_bgo2)) itp = instance_place(x,y-16,obj_uni_demo2_bgo2)
else if(instance_place(x,y-16,obj_uni_demo2_bgo3)) itp = instance_place(x,y-16,obj_uni_demo2_bgo3)
else if(instance_place(x,y-16,obj_uni_demo2_bgo4)) itp = instance_place(x,y-16,obj_uni_demo2_bgo4)
else if(instance_place(x,y-16,obj_uni_demo2_bgo1)) itp = instance_place(x,y-16,obj_uni_demo2_bgo1)
else if(instance_place(x,y-16,obj_uni_demo2_bgo2)) itp = instance_place(x,y-16,obj_uni_demo2_bgo2)
else if(instance_place(x,y-16,obj_uni_demo2_bgo3)) itp = instance_place(x,y-16,obj_uni_demo2_bgo3)
else if(instance_place(x,y-16,obj_uni_demo2_bgo4)) itp = instance_place(x,y-16,obj_uni_demo2_bgo4)
else itp = 0;
if(itp != 0) with(itp) instance_destroy();
event_inherited();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
